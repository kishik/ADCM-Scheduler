# Generated by Django 4.1.1 on 2022-10-11 19:01

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ActiveLink",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("userId", models.CharField(max_length=200)),
                ("projectId", models.CharField(max_length=200)),
                ("modelId", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="Link",
            fields=[
                ("id", models.AutoField(editable=False, primary_key=True, serialize=False)),
                ("source", models.CharField(max_length=100)),
                ("target", models.CharField(max_length=100)),
                ("type", models.CharField(max_length=100)),
                ("lag", models.IntegerField(blank=True, default=0)),
            ],
        ),
        migrations.CreateModel(
            name="Rule",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=30)),
                ("rule", models.CharField(max_length=9999)),
                ("userId", models.IntegerField()),
                ("isActive", models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                ("my_id", models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ("id", models.CharField(blank=True, max_length=100)),
                ("text", models.CharField(blank=True, max_length=100)),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField(blank=True)),
                ("duration", models.IntegerField(blank=True)),
                ("progress", models.FloatField(blank=True)),
                ("parent", models.CharField(blank=True, max_length=100)),
                ("type", models.CharField(blank=True, max_length=100)),
                ("hype", models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Task2",
            fields=[
                ("my_id", models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ("id", models.CharField(blank=True, max_length=100)),
                ("text", models.CharField(blank=True, max_length=100)),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField(blank=True)),
                ("duration", models.IntegerField(blank=True)),
                ("progress", models.FloatField(blank=True)),
                ("parent", models.CharField(blank=True, max_length=100)),
                ("type", models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="URN",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("type", models.CharField(max_length=30)),
                ("urn", models.CharField(max_length=200)),
                ("userId", models.IntegerField()),
                ("isActive", models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name="Wbs",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("wbs_code", models.CharField(max_length=30)),
                ("docsdiv", models.CharField(max_length=10)),
                ("wbs1", models.CharField(max_length=10)),
                ("wbs2", models.CharField(max_length=100)),
                ("wbs3", models.CharField(max_length=100)),
                ("specs", models.CharField(max_length=200)),
                ("userId", models.IntegerField()),
                ("isActive", models.BooleanField()),
            ],
        ),
    ]
